# Generated by Django 3.2.9 on 2021-11-09 03:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import home.models.articles
import home.models.users
import martor.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='帐号')),
                ('nickname', models.CharField(max_length=255, verbose_name='昵称')),
                ('email', models.EmailField(max_length=255, verbose_name='邮箱')),
                ('avatar', models.ImageField(blank=True, default='avatar/default_avatar.jpg', null=True, upload_to=home.models.users.upload_avatar_path, verbose_name='头像')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='手机号码')),
                ('gender', models.CharField(blank=True, default='男', max_length=10, null=True, verbose_name='性别')),
                ('age', models.CharField(blank=True, max_length=10, null=True, verbose_name='年龄')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='岗位职称')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='地址')),
                ('intro', models.TextField(blank=True, null=True, verbose_name='简介')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否已经删除')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否可用')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否系统管理员')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='标签名称')),
                ('sort', models.IntegerField(default=0, help_text='权重越大越靠前', verbose_name='排序值权重')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_tags', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='菜单名称')),
                ('sort', models.IntegerField(default=0, help_text='权重越大越靠前', verbose_name='排序值权重')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_menus', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '菜单',
                'verbose_name_plural': '菜单',
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.IntegerField(default=0, help_text='权重越大越靠前', verbose_name='排序值权重')),
                ('name', models.CharField(max_length=255, verbose_name='类型名称')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_categories', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_categories', to='home.menu', verbose_name='所属菜单')),
            ],
            options={
                'verbose_name': '类型',
                'verbose_name_plural': '类型',
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='文档标题')),
                ('description', martor.models.MartorField(blank=True, verbose_name='簡介')),
                ('content', martor.models.MartorField(blank=True, verbose_name='文档内容')),
                ('cover', models.ImageField(blank=True, null=True, upload_to=home.models.articles.upload_cover_path, verbose_name='封面')),
                ('sort', models.IntegerField(default=0, help_text='权重越大越靠前', verbose_name='排序值权重')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('status', models.IntegerField(choices=[(10, '草稿'), (20, '发布')], default=10, verbose_name='文档状态')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='已删除')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('view_count', models.IntegerField(default=0, verbose_name='观看次数')),
                ('like_count', models.IntegerField(default=0, verbose_name='点赞次数')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_articles', to='home.category', verbose_name='所属类型')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_articles', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('tags', models.ManyToManyField(blank=True, related_name='tag_articles', to='home.Tag', verbose_name='标签')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章',
                'db_table': 'doc',
            },
        ),
    ]
